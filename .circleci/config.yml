version: 2.1
executors:
  valheim:
    docker:
      - image: cimg/base:stable
jobs:
  build:
    executor: valheim
    environment:
      TAG: ghcr.io/ekman/valheim
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build image
          command: >-
            docker build .
            --tag "$TAG"
            --no-cache
            --pull
            --quiet
      - run:
          name: Save image
          command: >-
            mkdir -p artifacts
            && docker save "$TAG"
            --output artifacts/valheim.image
      - store_artifacts:
          path: artifacts/valheim.image
      - persist_to_workspace:
          root: artifacts
          paths: [ "*" ]
  push:
    executor: valheim
    environment:
      TAG: ghcr.io/ekman/valheim
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Login to GitHub packages
          command: echo $GITHUB_PACKAGE_TOKEN | docker login ghcr.io --username "$CIRCLE_PROJECT_USERNAME" --password-stdin
      - attach_workspace:
          at: artifacts
      - run:
          name: Load artifact
          command: docker load --input artifacts/valheim.image
      - run:
          name: Push "latest" image
          command: docker push --quiet "$TAG"
      - run:
          name: Push version images
          command: |-
            git_last_version=$(git describe --tags --abbrev=0)

            # Is it a release?
            if [[ "$CIRCLE_BRANCH" == "master" ]]; then
              regex="([0-9]+)\.([0-9]+)\.([0-9]+)"

              if [[ "$CIRCLE_TAG" =~ $regex ]] || [[ "$git_last_version" =~ $regex ]]; then
                # Construct three versions from the semantic version
                major="${BASH_REMATCH[1]}"
                minor="${BASH_REMATCH[2]}"
                patch="${BASH_REMATCH[3]}"

                versions=($major "$major.$minor" "$major.$minor.$patch")

                for version in ${versions[@]}; do
                  docker tag "$TAG" "$TAG:$version"
                  docker push --quiet "$TAG:$version"
                done
              fi
            else
              version="${git_last_version}-beta.${CIRCLE_BUILD_NUM}"
              docker tag "$TAG" "$TAG:$version"
              docker push --quiet "$TAG:$version"
            fi
workflows:
  valheim:
    jobs: &jobs
      - build:
          context: &context [ GitHubPackages ]
      - approve_push:
          type: approval
          filters:
            branches:
              ignore: [ master ]
      - push:
          context: *context
          # filters:
          #  branches:
          #    only: [ master ]
          requires:
            - build
            - approve_push
  valheim-daily:
    triggers:
      - schedule:
          cron: 0 4 * * *
          filters:
            branches:
              only: [ master ]
    jobs: *jobs
